import time
import random
from adjascency_matrix import AdjascencyMatrix
from adjascency_list import AdjascencyList
from bfs import BuildBFS
from dfs import BuildDFS
from connected_components import ConnectedComponentes
from graph_info_output import GraphInfoOutput
from old_graph import OldGraph

if __name__ == "__main__":
	graph_file_path = "./graph_files/grafo_1.txt"
 	# (1) check memory usage
	#matrix = AdjascencyMatrix(graph_file_path)
	#list_rep = AdjascencyList(graph_file_path)
	#node_list = list_rep.node_list()
	#selected_nodes_graph_2 = [28, 171, 147, 283, 131, 507, 247, 33, 789, 169, 829, 885, 654, 795, 261, 846, 308, 597, 88, 38, 751, 355, 474, 229, 577, 335, 158, 220, 353, 809, 147, 596, 778, 764, 966, 336, 120, 604, 248, 859, 770, 915, 664, 78, 516, 905, 661, 509, 616, 464, 589, 670, 803, 930, 375, 250, 460, 834, 807, 42, 453, 874, 527, 204, 750, 420, 129, 346, 957, 70, 665, 525, 347, 218, 102, 331, 71, 581, 38, 609, 364, 704, 126, 530, 801, 42, 233, 181, 16, 607, 897, 36, 794, 9, 919, 591, 221, 862, 371, 280, 203, 526, 329, 409, 955, 647, 810, 45, 397, 804, 586, 320, 146, 376, 312, 725, 511, 583, 882, 965, 280, 913, 562, 806, 381, 933, 721, 918, 924, 122, 131, 192, 465, 905, 513, 661, 626, 769, 57, 716, 672, 579, 184, 715, 199, 571, 908, 531, 791, 205, 57, 403, 534, 161, 693, 204, 636, 878, 19, 814, 943, 826, 923, 460, 961, 769, 403, 366, 476, 255, 110, 295, 145, 200, 240, 403, 497, 89, 20, 675, 856, 343, 784, 865, 296, 353, 62, 873, 102, 309, 322, 853, 828, 632, 738, 531, 342, 132, 182, 763, 877, 443, 612, 788, 466, 335, 441, 964, 922, 311, 310, 696, 257, 292, 629, 926, 890, 622, 925, 388, 117, 441, 485, 378, 363, 830, 931, 859, 792, 668, 838, 28, 583, 507, 529, 514, 649, 469, 4, 268, 942, 316, 383, 579, 658, 99, 766, 644, 512, 560, 125, 259, 402, 792, 376, 414, 872, 168, 252, 491, 112, 44, 484, 116, 707, 446, 32, 85, 794, 676, 752, 301, 801, 781, 633, 387, 9, 352, 201, 918, 766, 526, 930, 660, 133, 94, 448, 487, 935, 764, 764, 284, 307, 629, 363, 771, 283, 496, 898, 62, 512, 303, 529, 886, 437, 303, 814, 643, 723, 114, 327, 31, 400, 391, 559, 8, 309, 346, 363, 287, 270, 822, 32, 129, 757, 590, 196, 616, 714, 753, 354, 477, 350, 869, 557, 509, 844, 239, 804, 414, 576, 671, 888, 22, 258, 179, 828, 136, 500, 334, 246, 194, 192, 339, 298, 375, 963, 478, 645, 329, 592, 529, 402, 313, 559, 569, 837, 91, 329, 37, 680, 231, 596, 386, 50, 134, 713, 21, 90, 279, 102, 879, 930, 189, 931, 275, 65, 207, 766, 538, 810, 467, 49, 117, 153, 420, 495, 597, 364, 854, 247, 115, 598, 915, 307, 613, 717, 775, 618, 135, 782, 421, 194, 286, 209, 223, 131, 762, 43, 872, 531, 468, 271, 105, 579, 225, 735, 523, 329, 210, 345, 420, 46, 479, 279, 265, 834, 366, 536, 779, 199, 535, 700, 226, 792, 898, 786, 61, 132, 216, 825, 884, 843, 807, 358, 227, 37, 488, 555, 360, 878, 919, 860, 308, 243, 829, 949, 357, 853, 202, 20, 878, 635, 361, 284, 419, 283, 66, 623, 759, 356, 477, 425, 127, 419, 553, 966, 753, 814, 87, 334, 332, 294, 190, 270, 862, 1, 704, 480, 914, 964, 898, 524, 556, 394, 441, 293, 145, 642, 300, 430, 763, 429, 373, 330, 860, 916, 520, 909, 212, 863, 20, 612, 401, 908, 802, 912, 773, 547, 822, 410, 640, 689, 124, 761, 948, 895, 651, 497, 698, 865, 274, 135, 380, 572, 415, 887, 363, 839, 358, 584, 905, 424, 403, 521, 232, 37, 908, 797, 647, 616, 341, 909, 947, 150, 524, 566, 564, 384, 747, 962, 490, 651, 71, 944, 878, 512, 850, 98, 207, 480, 450, 460, 216, 647, 117, 582, 6, 136, 362, 873, 355, 481, 96, 724, 432, 912, 531, 356, 52, 276, 455, 716, 566, 339, 416, 65, 918, 228, 436, 548, 566, 404, 775, 135, 375, 131, 803, 534, 737, 891, 371, 453, 203, 961, 587, 567, 168, 514, 321, 435, 898, 667, 527, 626, 887, 617, 518, 275, 199, 780, 502, 25, 605, 195, 640, 218, 757, 168, 356, 112, 125, 460, 296, 917, 953, 522, 793, 399, 67, 299, 817, 23, 826, 291, 949, 380, 202, 732, 685, 396, 885, 902, 198, 777, 7, 612, 66, 906, 868, 590, 743, 703, 378, 251, 956, 565, 644, 777, 865, 756, 180, 966, 479, 403, 714, 794, 614, 558, 862, 518, 131, 784, 523, 141, 842, 928, 939, 221, 920, 295, 9, 716, 955, 925, 103, 759, 303, 368, 70, 38, 933, 938, 352, 65, 840, 395, 863, 742, 220, 434, 237, 701, 176, 129, 519, 322, 885, 356, 195, 465, 9, 262, 806, 390, 812, 559, 759, 27, 771, 678, 66, 942, 573, 449, 88, 208, 99, 946, 862, 781, 798, 435, 933, 394, 776, 438, 137, 246, 722, 227, 68, 580, 678, 127, 843, 231, 624, 248, 331, 831, 12, 320, 184, 772, 733, 293, 47, 626, 448, 368, 806, 636, 49, 832, 492, 48, 561, 198, 393, 945, 65, 699, 69, 511, 851, 765, 125, 750, 697, 908, 480, 110, 895, 857, 451, 840, 919, 534, 684, 31, 582, 119, 765, 859, 546, 179, 711, 744, 888, 33, 777, 423, 393, 931, 525, 514, 88, 157, 805, 444, 540, 547, 802, 826, 670, 122, 716, 432, 341, 728, 902, 536, 540, 558, 305, 71, 449, 776, 518, 409, 418, 694, 613, 358, 270, 960, 689, 185, 638, 322, 878, 110, 648, 341, 166, 433, 834, 401, 67, 455, 332, 406, 917, 259, 693, 116, 20, 613, 492, 559, 668, 611, 394, 410, 432, 787, 302, 41, 948, 426, 82, 471, 473, 784, 875, 892, 608, 177, 129, 181, 600, 408, 251, 858, 800, 510, 11, 673, 160, 98, 161, 370, 195, 745, 846, 412, 929, 818, 665, 441, 406, 211, 958, 337, 238, 512, 920, 123, 172, 456, 830, 919, 176, 112, 628, 46, 95, 660, 854, 58, 653, 911, 17, 663, 630, 149, 529, 117, 404, 530, 743, 94, 519, 316, 449, 342, 517, 592, 433, 807, 167, 139, 229, 426, 40, 418, 165, 97, 61, 546, 21, 23, 120, 331, 775, 685, 238, 640, 536, 910, 306, 757, 132, 70, 960, 843, 873, 386, 408]
	selected_nodes_graph_3 = [3175, 7899, 1102, 6942, 6857, 8364, 8858, 2307, 5089, 7407, 7808, 4421, 1248, 7933, 7923, 6314, 3705, 2687, 3381, 6876, 1234, 4616, 2878, 1047, 5486, 5103, 8305, 8492, 7114, 1967, 3879, 1491, 9860, 5467, 6700, 7890, 2905, 7449, 3633, 7386, 5962, 9294, 7901, 9863, 7908, 3540, 3205, 262, 6213, 3122, 1339, 1140, 8792, 8902, 1824, 8927, 6495, 8822, 6238, 80, 5910, 1233, 4949, 8240, 4491, 5288, 5339, 5966, 6180, 4692, 4906, 1311, 4057, 946, 3413, 4711, 2443, 7484, 1909, 1023, 4238, 3572, 8094, 3172, 4755, 3165, 6579, 5464, 1760, 8164, 5760, 5603, 9552, 4918, 440, 8347, 1965, 1824, 8248, 6429, 2038, 1113, 309, 3693, 388, 6822, 9727, 8040, 6887, 658, 3278, 7576, 1910, 8846, 2117, 5452, 6802, 6093, 3965, 9627, 3369, 9812, 9289, 6295, 5931, 5872, 3575, 6572, 1036, 54, 220, 7982, 8353, 601, 8652, 5336, 1951, 4613, 1013, 2523, 7392, 2600, 2402, 8895, 4866, 5762, 3301, 5982, 4610, 2655, 339, 6002, 4495, 4522, 6915, 1935, 1676, 2001, 7067, 9533, 489, 8818, 1497, 9128, 784, 1380, 7571, 4603, 5108, 390, 4072, 7269, 9541, 1343, 2703, 3155, 2883, 8621, 3016, 6925, 3158, 1884, 4969, 2379, 1007, 4354, 4676, 8269, 9384, 5540, 4750, 3971, 9423, 5483, 9352, 4264, 6671, 2995, 4229, 1224, 723, 7437, 4506, 8704, 5520, 9556, 7592, 7480, 3776, 8897, 5919, 6020, 5402, 2717, 434, 1369, 5101, 2233, 352, 9717, 6921, 6622, 1041, 5126, 8325, 3195, 8132, 1179, 4252, 1615, 315, 3721, 7515, 7744, 1243, 3320, 9098, 2759, 6511, 5462, 1900, 6774, 4040, 1866, 1187, 8540, 4019, 5747, 4555, 1090, 1919, 9789, 7965, 8472, 6656, 8640, 4429, 5500, 3528, 4170, 822, 8505, 6539, 3561, 4995, 7925, 3762, 7396, 18, 6179, 226, 2369, 2170, 5120, 8032, 2075, 2611, 9771, 8930, 9846, 7847, 4887, 6058, 3044, 9022, 3024, 9301, 94, 3955, 2386, 3607, 8768, 6447, 1468, 2294, 1861, 1929, 4009, 1986, 6994, 6190, 2557, 5208, 6106, 2733, 6237, 5523, 3763, 5297, 5390, 9092, 3433, 7147, 7168, 8608, 9217, 2773, 8735, 6188, 9421, 7895, 7410, 7707, 5232, 9085, 3135, 9819, 5211, 747, 7059, 5088, 4957, 3731, 5102, 3789, 7458, 7303, 9825, 6696, 7436, 1508, 3867, 5803, 3188, 7143, 556, 9777, 4203, 8467, 2083, 203, 4496, 6579, 9632, 2313, 9935, 5136, 7999, 6497, 2538, 957, 4674, 7341, 6104, 2062, 1077, 330, 983, 8900, 7725, 825, 2143, 1453, 9969, 4204, 1548, 8531, 2444, 3030, 2848, 8924, 153, 2711, 8772, 1291, 1109, 6912, 6543, 105, 3945, 9946, 6032, 4855, 2634, 940, 9055, 4686, 5592, 3499, 4257, 7499, 5683, 312, 452, 7743, 1246, 9677, 5139, 4658, 7881, 2758, 3166, 3073, 7188, 7906, 4198, 9536, 5141, 6377, 7421, 2568, 7040, 2234, 9631, 5089, 7004, 2118, 3125, 3799, 8617, 1014, 3590, 6589, 6695, 41, 6856, 5209, 1578, 5965, 3569, 6008, 1536, 3031, 5013, 5044, 6681, 539, 8638, 2229, 7885, 3932, 2529, 8728, 9591, 1913, 6730, 9113, 4791, 2077, 4999, 4982, 8519, 906, 3076, 4235, 7495, 2434, 6954, 7022, 1367, 7776, 9214, 5846, 1512, 7108, 8745, 4337, 7380, 2278, 1724, 8400, 3792, 6659, 4938, 9583, 4030, 4628, 1220, 3234, 4495, 8100, 8684, 2708, 9487, 4599, 4634, 7805, 2293, 8952, 2725, 8, 8472, 1745, 8789, 2144, 4025, 4128, 4358, 6996, 7970, 8534, 8373, 7037, 471, 4184, 9523, 6158, 2320, 776, 1535, 717, 4609, 8642, 1598, 2473, 4215, 8555, 2502, 8959, 1339, 7910, 2753, 148, 1699, 490, 1339, 8711, 3398, 9383, 4417, 1348, 2378, 2608, 1040, 6760, 8762, 34, 6173, 4125, 7840, 2890, 7150, 6247, 7367, 3300, 1117, 2609, 4322, 7356, 2789, 8111, 3771, 6525, 5706, 8723, 3123, 5619, 6998, 5276, 8840, 4371, 3281, 4993, 8769, 8192, 3180, 9158, 6459, 8462, 9986, 5247, 7079, 3439, 8978, 72, 6976, 7494, 518, 9924, 9262, 4981, 249, 4455, 6628, 4835, 1103, 9577, 8481, 731, 1825, 9312, 4739, 5349, 4693, 7114, 1350, 8620, 8441, 1536, 2625, 9618, 5757, 9008, 7719, 2590, 8476, 7124, 2632, 6682, 7599, 3186, 4231, 3756, 5748, 8557, 1370, 4052, 973, 7277, 6037, 1893, 600, 7441, 6611, 1321, 6168, 9011, 4916, 217, 5204, 1145, 7837, 4329, 1873, 4887, 722, 6587, 3348, 3676, 1584, 6008, 1203, 3458, 3512, 9602, 182, 7339, 4723, 7745, 5704, 1312, 3654, 2135, 4565, 2607, 9521, 943, 4228, 5611, 8135, 8428, 8914, 5555, 9654, 9081, 8202, 3275, 6996, 1865, 2462, 5493, 5181, 4509, 1308, 4781, 1294, 1207, 7423, 6800, 1985, 4897, 5381, 3638, 9599, 1538, 9944, 2998, 4377, 6303, 7557, 8815, 4212, 4389, 4381, 7442, 7682, 2701, 3469, 4562, 7442, 4283, 9474, 6371, 151, 3123, 9185, 413, 4400, 7489, 5248, 5264, 2992, 9073, 8777, 9243, 1667, 2329, 7312, 2794, 6322, 5151, 9816, 1503, 9594, 4515, 4104, 3004, 8075, 1001, 747, 5115, 8713, 5073, 8678, 2430, 2005, 2945, 2064, 6877, 5010, 1679, 8171, 1690, 1323, 7775, 5770, 3628, 2471, 8453, 6960, 8821, 5676, 8924, 291, 6511, 1003, 611, 9304, 2008, 2250, 769, 5253, 4227, 3645, 2282, 5807, 5854, 1770, 2994, 3438, 8588, 6787, 4851, 4074, 9153, 4702, 6126, 9163, 4983, 5310, 5388, 6290, 1996, 7371, 1880, 791, 7521, 5816, 2726, 2419, 9172, 9940, 614, 7107, 2678, 8021, 1880, 5308, 7134, 3891, 179, 4968, 8710, 8702, 7929, 9842, 7370, 8385, 5816, 204, 5531, 2444, 8538, 186, 3261, 9522, 6701, 8242, 327, 9763, 1370, 2914, 2193, 7953, 6569, 3035, 8463, 9568, 2510, 687, 242, 911, 4967, 5033, 8191, 5974, 3872, 9610, 7116, 7215, 8307, 1529, 7223, 2967, 8944, 2233, 5955, 1442, 4745, 7496, 1690, 9939, 1225, 3849, 2811, 4976, 4833, 5694, 6705, 5664, 5505, 2063, 1475, 6430, 4943, 9420, 693, 1463, 9119, 7450, 6176, 9029, 9309, 3673, 6806, 3368, 8602, 899, 266, 5449, 5370, 4087, 4586, 8296, 7392, 6574, 7839, 4839, 1410, 2514, 6433, 4250, 5157, 3593, 3149, 2570, 1146, 645, 665, 6341, 416, 8387, 7140, 8689, 3606, 8465, 5344, 1408, 7083, 8233, 2385, 8305, 1964, 2994, 9493, 2051, 9353, 8633, 450, 983, 6117, 1899, 5807, 6003, 8737, 4899, 8074, 5258, 2363, 1290, 7648, 316, 172, 4934, 8882, 258, 8592, 8055, 323, 9752, 5979, 4430, 4078, 1801, 5206, 3873, 8397, 8752, 8218, 1606, 5255, 9856, 595, 461, 8357, 6530, 1412, 2558, 6562, 5685, 7422, 7036, 7808, 3720, 4755, 6373, 9299, 7189, 210, 8648, 4851, 5229, 1734, 9601, 5465, 5042, 5687, 6330, 8145, 9284, 2322, 3943, 9450, 4524, 8110, 5463, 9057, 5742, 2117, 3343]
	#selected_nodes_graph_4 = [77601, 89451, 17116, 61887, 73983, 78179, 57710, 58684, 46823, 38098, 67115, 29453, 99434, 9982, 79326, 85158, 90728, 15975, 64883, 21250, 33873, 53394, 59401, 56774, 44703, 84849, 77705, 38378, 96300, 84592, 50205, 96723, 37199, 89383, 31300, 87755, 48825, 22650, 32442, 91647, 81269, 77451, 77418, 9723, 6807, 62552, 24049, 84023, 91660, 5319, 29296, 97335, 92174, 47664, 98962, 53488, 69338, 72575, 48584, 28282, 54510, 45022, 73847, 435, 3912, 8134, 21800, 7066, 64960, 82140, 99222, 55751, 31244, 63661, 40276, 33773, 76776, 59312, 46186, 73618, 85525, 75210, 59175, 59584, 99166, 91571, 3498, 49072, 91326, 63882, 17346, 53767, 93725, 35719, 49075, 55598, 66929, 34446, 61432, 74044, 34512, 75026, 67354, 22737, 92017, 88101, 13962, 64880, 9888, 6347, 90841, 60321, 78595, 38202, 60195, 82106, 51682, 16590, 38347, 84613, 59460, 22378, 44296, 49837, 69865, 81492, 30547, 90439, 99686, 25561, 67220, 36497, 56511, 3467, 35026, 35246, 78655, 70978, 91562, 84811, 38035, 18775, 95864, 89282, 24881, 66537, 99148, 3831, 16144, 29099, 13427, 80426, 16731, 62784, 49990, 83065, 60429, 73773, 33122, 31386, 43060, 549, 1028, 39139, 66064, 14373, 40555, 28002, 5893, 63648, 70548, 33949, 9466, 69312, 40658, 27081, 7471, 68778, 65315, 5769, 58548, 89805, 88876, 88651, 64897, 54304, 33434, 34075, 94963, 98227, 33123, 92539, 18357, 8698, 72476, 60077, 1136, 29877, 98198, 11742, 11750, 43643, 77432, 68741, 33480, 80068, 96737, 5260, 46654, 40297, 50135, 23607, 11086, 30278, 48129, 91615, 99398, 47945, 67808, 66288, 66290, 2069, 93735, 59269, 61867, 13835, 47926, 97223, 6065, 47415, 70827, 70571, 23952, 4563, 95284, 25791, 33047, 56755, 17471, 46138, 86282, 62058, 23787, 69721, 69766, 25661, 49154, 47318, 45592, 33624, 46890, 91010, 73289, 66147, 92741, 73827, 99204, 74858, 45457, 56099, 58216, 49551, 76430, 20111, 60305, 74754, 58999, 30578, 11010, 7168, 59068, 98935, 21007, 54337, 70360, 53802, 87034, 74312, 4945, 41827, 15932, 89551, 34697, 49383, 6385, 33846, 56081, 79213, 67649, 51660, 36528, 18928, 74300, 92733, 57522, 45592, 55028, 77201, 88936, 1570, 46125, 28375, 14174, 1949, 83943, 3481, 37571, 52285, 22445, 25764, 76627, 28309, 96172, 43731, 39770, 83605, 8500, 20714, 91165, 93654, 63786, 58116, 79850, 11584, 8230, 15891, 23990, 74208, 20601, 89581, 95514, 37472, 68106, 91720, 28098, 82701, 51184, 24709, 69048, 53358, 25467, 50853, 20952, 97499, 17265, 24070, 11484, 4512, 62412, 90628, 78978, 2345, 52628, 41784, 40113, 79280, 83277, 72854, 5025, 44600, 30375, 81744, 49308, 60641, 29016, 31168, 94822, 46349, 2657, 93524, 53334, 36622, 82219, 14967, 97228, 47249, 39914, 95468, 59843, 57130, 8747, 59117, 22708, 57698, 900, 77556, 61637, 75030, 78247, 8945, 69455, 50837, 42105, 69394, 77375, 72763, 95375, 43619, 14211, 74432, 42540, 63999, 26022, 34122, 45134, 64398, 6813, 45249, 19882, 47031, 73516, 69178, 39870, 64544, 57841, 20556, 95719, 67970, 97854, 79811, 88118, 99956, 7861, 27283, 84439, 82318, 91872, 91444, 31116, 21943, 71105, 62330, 54821, 23382, 70723, 31626, 42306, 45366, 2127, 82169, 99072, 92189, 14320, 41068, 64554, 64231, 53164, 56707, 73073, 26079, 10076, 19051, 9049, 27374, 28150, 19464, 98467, 977, 13760, 22641, 83264, 77004, 59075, 68718, 21102, 45360, 2530, 1956, 87664, 80448, 75549, 35275, 60333, 85854, 62071, 45737, 92144, 34545, 73794, 39185, 83963, 37708, 71603, 57403, 37746, 72943, 76903, 14151, 81827, 75365, 33712, 64441, 46595, 5233, 24653, 27337, 11195, 92966, 87628, 61424, 17820, 16042, 68902, 38893, 3917, 63133, 60548, 67964, 35490, 25819, 2553, 55868, 3217, 10088, 72962, 44233, 66321, 31524, 46998, 86380, 2196, 84329, 50477, 23655, 3237, 7746, 47190, 87959, 43183, 99402, 58148, 32547, 40036, 53089, 51742, 44382, 22338, 92945, 85486, 6013, 93325, 964, 26513, 6374, 97552, 6934, 7645, 37571, 26540, 93364, 84550, 9345, 72253, 17410, 11656, 19075, 80272, 97261, 95823, 77529, 69083, 95852, 97825, 45318, 11664, 46107, 49678, 33276, 9739, 26960, 57782, 66377, 17879, 46185, 76299, 19437, 36069, 88853, 11273, 93236, 12665, 10169, 89887, 72093, 101, 52619, 53979, 78003, 95939, 38604, 59158, 46743, 69628, 86299, 19115, 87707, 13903, 60348, 34014, 83671, 1555, 24353, 75481, 74473, 75722, 88550, 51217, 46096, 74888, 83739, 5150, 72648, 9822, 32465, 15892, 89213, 38859, 37872, 4643, 90426, 7472, 69313, 55079, 5322, 46742, 89602, 48892, 10624, 12742, 3058, 2785, 56774, 87207, 56046, 44805, 35854, 25030, 63417, 96432, 55608, 16915, 51122, 30329, 72985, 98836, 47238, 51592, 604, 81047, 46788, 34135, 20046, 96771, 40502, 28978, 71058, 43570, 13196, 78151, 85330, 90665, 69404, 85604, 65087, 90234, 61277, 82751, 18360, 77772, 86882, 69137, 32127, 42137, 43209, 23637, 62822, 17141, 98418, 58653, 76505, 28840, 67947, 10735, 52285, 50956, 43029, 72085, 66419, 22564, 51130, 80152, 33669, 62691, 58353, 7687, 23624, 42957, 71615, 65553, 56498, 92094, 49897, 11841, 12480, 49268, 10309, 43666, 67264, 24610, 59801, 87996, 77976, 29795, 7958, 26113, 71689, 51388, 77518, 27480, 64657, 69419, 43135, 57610, 80776, 45809, 27660, 61939, 19964, 47561, 75947, 2344, 14790, 35699, 33474, 44246, 12314, 16221, 87989, 94654, 6608, 56433, 59273, 51512, 93747, 25724, 47801, 29552, 81652, 70612, 91392, 7775, 88339, 46012, 47738, 14561, 32462, 19708, 11025, 77448, 79860, 90848, 53006, 45394, 29793, 86173, 83486, 56162, 88136, 80755, 9337, 56338, 50416, 62103, 86378, 74843, 94565, 30876, 23464, 89859, 3849, 25709, 87528, 8017, 54859, 96640, 79812, 93107, 45755, 52922, 90901, 15378, 44725, 73322, 33984, 42536, 42911, 269, 92665, 5353, 46085, 13716, 53494, 30363, 6986, 52034, 83440, 10160, 93704, 29472, 7962, 6412, 8819, 59958, 88535, 20248, 58837, 71724, 30332, 53369, 30338, 71765, 73879, 3085, 99864, 38810, 4483, 59646, 1611, 24102, 85262, 52010, 15974, 27115, 16708, 9572, 26678, 77302, 33616, 58302, 20278, 95714, 12452, 55213, 71552, 70366, 75352, 83832, 55261, 32311, 44562, 12218, 80632, 90215, 67143, 58640, 32343, 48183, 55470, 86954, 1705, 63345, 55620, 53506, 8609, 22206, 26008, 31055, 83015, 94547, 45168, 36071, 77645, 24368, 5838, 95212, 93725, 41416, 68944, 70718, 4876, 83917, 88530, 74345, 63859, 31308, 3114, 53663, 32863, 53377, 6122, 23918, 64130, 94270, 32284, 46309, 25945, 57631, 11397, 27447, 74524, 26935, 71824, 73714, 75326, 79983, 80075, 4485, 44493, 28716, 23868, 72833, 66161, 29898, 93466, 56149, 28340, 87493, 89420, 50703, 18159, 74841, 61581, 35935, 50767, 57694, 66963, 79382, 50896, 2566, 88779, 78631, 45257, 38335, 42981, 34027, 31141, 51124, 64429, 29154, 29440, 18608, 94161, 32777, 44186, 73778, 33139, 11115, 60875, 32078, 69029, 82134, 1721, 28931, 6162, 8237, 79536, 15440, 14107, 20072, 59136, 21384, 51845, 97279, 58869, 37123, 77225, 85016, 81717, 15528, 24670, 32355, 30598, 21070, 47292, 87105, 88830, 49414, 31145, 90766, 83180, 50617, 64933, 17790, 18207, 15198, 33417, 80644, 48610, 40856, 79459, 98013, 93256, 80981, 18457, 83057, 31423, 17705, 50791, 23677, 34307]

	#print(selected_nodes)
	# -------------------------------------------------------

	# (2) 1000 bfs searchs using matrix representation and list representation
	start_time = time.time()
	
	matrix = AdjascencyMatrix(graph_file_path)
	start_time = time.time()
	for node in selected_nodes_graph_3:
		tree = BuildDFS(matrix, node)
	print("--- %s seconds ---" % (time.time() - start_time))
	list_rep = AdjascencyList(graph_file_path)
	
	tree = BuildBFS(list_rep, 1)
	print("--- %s seconds ---" % (time.time() - start_time))
	# ----------------------------------------------------

	# (3) 1000 dfs searchs using matrix representation and list representation
	""" start_time = time.time()
		matrix = AdjascencyMatrix(graph_file_path)
		tree = BuildDFS(matrix, 1)
		print("--- %s seconds ---" % (time.time() - start_time)) """
	
	#start_time = time.time()
	#list_rep = AdjascencyList(graph_file_path)
	#tree = BuildDFS(list_rep, 1)
	#print("--- %s seconds ---" % (time.time() - start_time))
	# ----------------------------------------------------

	# (4) Determine the father of the 10,20, and 30 nodes of the graph using vertices 1,2 3 as starting points

	# 4.1 Using BFS search
	""" list_rep = AdjascencyList(graph_file_path)
	for start_node in range(1,4):
		bfs = BuildBFS(list_rep, start_node)
		for i in range(10,31,10):
			if bfs.tree.tree_graph.get(i) is not None:
				print("Node father of", i, "it's node:", bfs.tree.tree_graph.get(i).dad)
			else:
				print("Node", i, "has no father when bfs starts searching from node", start_node)
		print() """

	# 4.2 Using DFS search
	""" list_rep = AdjascencyList(graph_file_path)
	for start_node in range(1,4):
		bfs = BuildDFS(list_rep, start_node)
		for i in range(10,31,10):
			if bfs.tree.tree_graph.get(i) is not None:
				print("Node father of", i, "it's node:", bfs.tree.tree_graph.get(i).dad)
			else:
				print("Node", i, "has no father when dfs starts searching from node", start_node)
		print() """
	# ----------------------------------------------------

	# (5) Determine the distance between nodes (10,20), (10,30), (20,30) (we gonna use BFS search)
	""" list_rep = AdjascencyList(graph_file_path)
	nodes = [[10,20],[10,30], [20,30]]
	for node in nodes:
		bfs = BuildBFS(list_rep, node[0])
		if bfs.tree.tree_graph.get(node[1]) is not None:
			print("Distance between nodes", node[0], "and", node[1], ":", bfs.tree.tree_graph.get(node[1]).nivel)
		else:
			print("There's no path from node", node[0], "to", node[1]) """
		#print(bfs.tree.tree_graph.get(30).nivel)
		
	
	# ----------------------------------------------------

	# (6) Find all connected components of given graph. Return how many connected components,
	#  the length of the largest connected components and the length of the smallest
	#connected_components = ConnectedComponentes(OldGraph(graph_file_path))
	#connected_components.represent_components()
	# ----------------------------------------------------
	#nodes = []
	""" for node in connected_components.components:
		nodes.append(node[0].get_name())  """
	# (7) Determine the graph diameter of given graph
	""" list_rep = AdjascencyList(graph_file_path)
	paths_distance = []
	for node in nodes:
		tree = BuildBFS(list_rep, node)
		last_explored_node = tree.explored_node(-1)
		tree = BuildBFS(list_rep, last_explored_node)
		paths_distance.append(tree.longest_short_path())
	print(paths_distance) """
	
	""" for node in list_rep.node_list():
		tree = BuildBFS(list_rep, node)
		#print(tree.last_explored_node())
		paths_distance.append(tree.longest_short_path()) """
	#print(max(paths_distance))
	# -------------------------------
	#print(paths_distance)
	#print(max(paths_distance))
	# Build graph output
	""" list_rep = AdjascencyList(graph_file_path)
	output = GraphInfoOutput(list_rep)
	output.build_file("output_grafo_5.txt") """